{"version":3,"file":"index.js","sources":["../src/components/GalaxyCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst GalaxyCanvas = ({ \n  effect = 'starfield', \n  options = {}, \n  width = window.innerWidth, \n  height = window.innerHeight,\n  background = '#000000'\n}) => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    let particles = [];\n\n    // Initialize canvas\n    canvas.width = width;\n    canvas.height = height;\n\n    // Effect configurations\n    const effectConfigs = {\n      starfield: {\n        particles: options.stars || 400,\n        speed: options.speed || 0.7,\n        colorStart: options.colorStart || '#ffffff',\n        colorEnd: options.colorEnd || '#0000ff',\n        maxDepth: options.maxDepth || 1000\n      },\n      fireflies: {\n        particles: options.fireflies || 50,\n        maxSpeed: options.maxSpeed || 1,\n        size: options.size || 4,\n        glowSize: options.glowSize || 20,\n        color: options.color || 'purple',\n        magnetic: options.magnetic !== undefined ? options.magnetic : true,\n        magneticRadius: options.magneticRadius || 200\n      },\n      spiral: {\n        particles: options.particles || 2000,\n        minRadius: options.minRadius || 5,\n        maxRadius: options.maxRadius || 300,\n        speed: options.speed || 0.02,\n        particleSize: options.particleSize || 2,\n        colorStart: options.colorStart || '#ff0088',\n        colorEnd: options.colorEnd || '#00ffff',\n        inwardSpeed: options.inwardSpeed || 0.5,\n        trail: options.trail || 8,\n        loop: options.loop !== undefined ? options.loop : true\n      }\n    };\n\n    // Helper functions\n    const interpolateColor = (color1, color2, factor) => {\n      const hex2rgb = (hex) => {\n        const r = parseInt(hex.slice(1, 3), 16);\n        const g = parseInt(hex.slice(3, 5), 16);\n        const b = parseInt(hex.slice(5, 7), 16);\n        return [r, g, b];\n      };\n\n      const c1 = hex2rgb(color1);\n      const c2 = hex2rgb(color2);\n      \n      const r = Math.round(c1[0] + (c2[0] - c1[0]) * factor);\n      const g = Math.round(c1[1] + (c2[1] - c1[1]) * factor);\n      const b = Math.round(c1[2] + (c2[2] - c1[2]) * factor);\n      \n      return `rgb(${r}, ${g}, ${b})`;\n    };\n\n    // Initialize particles based on effect\n    const initializeParticles = () => {\n      const config = effectConfigs[effect];\n      particles = [];\n\n      switch(effect) {\n        case 'starfield':\n          for(let i = 0; i < config.particles; i++) {\n            particles.push({\n              x: Math.random() * width - width/2,\n              y: Math.random() * height - height/2,\n              z: Math.random() * config.maxDepth,\n              prevX: 0,\n              prevY: 0\n            });\n          }\n          break;\n\n        case 'fireflies':\n          for(let i = 0; i < config.particles; i++) {\n            particles.push({\n              x: Math.random() * width,\n              y: Math.random() * height,\n              vx: (Math.random() - 0.5) * config.maxSpeed,\n              vy: (Math.random() - 0.5) * config.maxSpeed,\n              phase: Math.random() * Math.PI * 2,\n              brightness: Math.random()\n            });\n          }\n          break;\n\n        case 'spiral':\n          const centerX = width / 2;\n          const centerY = height / 2;\n          for(let i = 0; i < config.particles; i++) {\n            const angle = Math.random() * Math.PI * 2;\n            const radius = config.maxRadius;\n            particles.push({\n              x: centerX + Math.cos(angle) * radius,\n              y: centerY + Math.sin(angle) * radius,\n              angle: angle,\n              radius: radius,\n              speed: config.speed * (0.5 + Math.random() * 0.5),\n              active: true\n            });\n          }\n          break;\n      }\n    };\n\n    // Animation functions for each effect\n    const animationFunctions = {\n      starfield: () => {\n        const config = effectConfigs.starfield;\n        ctx.fillStyle = background;\n        ctx.fillRect(0, 0, width, height);\n\n        particles.forEach(star => {\n          star.z -= config.speed;\n          if(star.z < 1) {\n            star.z = config.maxDepth;\n            star.x = Math.random() * width - width/2;\n            star.y = Math.random() * height - height/2;\n          }\n\n          const scale = config.maxDepth / (config.maxDepth + star.z);\n          const x = star.x * scale + width/2;\n          const y = star.y * scale + height/2;\n          \n          const colorFactor = 1 - star.z / config.maxDepth;\n          ctx.fillStyle = interpolateColor(config.colorStart, config.colorEnd, colorFactor);\n          \n          ctx.beginPath();\n          ctx.arc(x, y, scale * 2, 0, Math.PI * 2);\n          ctx.fill();\n        });\n      },\n\n      // Add other effect animations here...\n      spiral: () => {\n        const config = effectConfigs.spiral;\n        const centerX = width / 2;\n        const centerY = height / 2;\n\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n        ctx.fillRect(0, 0, width, height);\n\n        particles.forEach(p => {\n          if (!config.loop && !p.active) return;\n\n          p.trail.push({ x: p.x, y: p.y });\n          if (p.trail.length > config.trail) {\n            p.trail.shift();\n          }\n\n          p.angle += p.speed * (1 + (config.maxRadius - p.radius) / config.maxRadius);\n          p.radius -= config.inwardSpeed;\n\n          p.x = centerX + Math.cos(p.angle) * p.radius;\n          p.y = centerY + Math.sin(p.angle) * p.radius;\n\n          if (p.trail.length > 1) {\n            ctx.beginPath();\n            ctx.moveTo(p.trail[0].x, p.trail[0].y);\n            \n            for(let i = 1; i < p.trail.length; i++) {\n              ctx.lineTo(p.trail[i].x, p.trail[i].y);\n            }\n\n            const colorFactor = 1 - (p.radius / config.maxRadius);\n            ctx.strokeStyle = interpolateColor(config.colorStart, config.colorEnd, colorFactor);\n            ctx.lineWidth = config.particleSize;\n            ctx.lineCap = 'round';\n            ctx.stroke();\n          }\n\n          if (p.radius < config.minRadius) {\n            if (config.loop) {\n              p.radius = config.maxRadius;\n              p.angle = Math.random() * Math.PI * 2;\n              p.trail = [];\n            } else {\n              p.active = false;\n            }\n          }\n        });\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      if (animationFunctions[effect]) {\n        animationFunctions[effect]();\n      }\n      animationFrameId = window.requestAnimationFrame(animate);\n    };\n\n    // Initialize and start animation\n    initializeParticles();\n    animate();\n\n    // Cleanup\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [effect, options, width, height, background]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        display: 'block',\n        width: '100%',\n        height: '100%'\n      }}\n    />\n  );\n};\n\nGalaxyCanvas.propTypes = {\n  effect: PropTypes.oneOf(['starfield', 'fireflies', 'spiral']),\n  options: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  background: PropTypes.string\n};\n\nexport default GalaxyCanvas; "],"names":["GalaxyCanvas","effect","options","width","window","innerWidth","height","innerHeight","background","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","animationFrameId","particles","effectConfigs","starfield","stars","speed","colorStart","colorEnd","maxDepth","fireflies","maxSpeed","size","glowSize","color","magnetic","undefined","magneticRadius","spiral","minRadius","maxRadius","particleSize","inwardSpeed","trail","loop","interpolateColor","color1","color2","factor","hex2rgb","hex","r","parseInt","slice","g","b","c1","c2","Math","round","initializeParticles","config","i","push","x","random","y","z","prevX","prevY","vx","vy","phase","PI","brightness","centerX","centerY","angle","radius","cos","sin","active","animationFunctions","fillStyle","fillRect","forEach","star","scale","colorFactor","beginPath","arc","fill","p","length","shift","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","animate","requestAnimationFrame","cancelAnimationFrame","React","createElement","ref","style","display","propTypes","PropTypes","oneOf","object","number","string"],"mappings":"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"}